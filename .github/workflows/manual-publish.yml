name: Manual Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (must match project.version)"
        required: true
        type: string
      repository:
        description: "Package index to target"
        required: true
        default: pypi
        type: choice
        options:
          - pypi
          - testpypi
      skip_checks:
        description: "Skip lint, type-check, and test steps"
        required: false
        default: false
        type: boolean

jobs:
  publish:
    name: Publish package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment:
      name: ${{ github.event.inputs.repository == 'testpypi' && 'testpypi' || 'pypi' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Sync dependencies
        run: uv sync --frozen --group dev --group release

      - name: Verify requested version
        run: |
          uv run python - <<'PY'
          import sys
          import tomllib

          with open("pyproject.toml", "rb") as handle:
              document = tomllib.load(handle)

          declared = document["project"]["version"]
          requested = "${{ github.event.inputs.version }}"

          if declared != requested:
              sys.stderr.write(
                  f"Version mismatch: pyproject.toml has {declared} but workflow input was {requested}.\n"
              )
              sys.exit(1)
          PY

      - name: Lint
        if: ${{ github.event.inputs.skip_checks != 'true' }}
        run: uv run ruff check

      - name: Type check
        if: ${{ github.event.inputs.skip_checks != 'true' }}
        run: uv run pyright

      - name: Run tests
        if: ${{ github.event.inputs.skip_checks != 'true' }}
        run: uv run pytest

      - name: Clean dist directory
        run: rm -rf dist

      - name: Build distributions
        run: uv run python -m build

      - name: Verify distributions
        run: uv run twine check dist/*

      - name: Publish to TestPyPI
        if: ${{ github.event.inputs.repository == 'testpypi' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          pypi_token: ${{ secrets.TESTPYPI_API_TOKEN }}

      - name: Publish to PyPI
        if: ${{ github.event.inputs.repository == 'pypi' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}
